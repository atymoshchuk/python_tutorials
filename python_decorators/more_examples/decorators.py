def add_tests(generator):
    def class_decorator(cls):
        """Add tests to `cls` generated by `generator()`."""
        for test_func, func, input, output in generator:
            test = lambda self, i=input, o=output, f=test_func, func=func: f(self, func, i, o)
            test.__name__ = "test_%s(%r, %r)" % (func.__name__, input, output)
            setattr(cls, test.__name__, test)
            print("added:", cls, test.__name__, test)
        return cls

    return class_decorator


def test_cases(parameters):
    def t(self, func_to_test, data, result):
        self.assertEqual(func_to_test(*data), result)

    for function, input, output in parameters:
        yield t, function, input, output
